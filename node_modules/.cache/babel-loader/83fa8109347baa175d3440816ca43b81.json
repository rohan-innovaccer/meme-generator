{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/training/react/react-day3-assignment/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Meme from \"./Meme\";\nimport Form from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n  const [showMeme, setShowMeme] = useState(true);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      setMemes(response.data.memes);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleClick = () => {\n    setShowMeme(false);\n  };\n\n  let memeList = memes.map(meme => {\n    return /*#__PURE__*/_jsxDEV(Meme, {\n      url: meme.url,\n      id: meme.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Create your own meme!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), memeList, showMeme ? memeList : /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RWh391A6PPPSo7ldLMyK2ZzEkWU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rohan/Desktop/training/react/react-day3-assignment/src/components/App.js"],"names":["useEffect","useState","Meme","Form","App","memes","setMemes","showMeme","setShowMeme","fetch","then","response","json","data","catch","err","console","log","handleClick","memeList","map","meme","url","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBL,MAAAA,QAAQ,CAACK,QAAQ,CAACE,IAAT,CAAcR,KAAf,CAAR;AACD,KAJH,EAKGS,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMG,WAAW,GAAG,MAAM;AACxBV,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,MAAIW,QAAQ,GAAGd,KAAK,CAACe,GAAN,CAAWC,IAAD,IAAU;AACjC,wBAAO,QAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAhB;AAAqB,MAAA,EAAE,EAAED,IAAI,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFc,CAAf;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,QAFH,EAGGZ,QAAQ,GAAGY,QAAH,gBAAc,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAHzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5BuBf,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Meme from \"./Meme\";\nimport Form from \"./Form\";\n\nexport default function App() {\n  const [memes, setMemes] = useState([]);\n  const [showMeme, setShowMeme] = useState(true);\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((response) => {\n        setMemes(response.data.memes);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleClick = () => {\n    setShowMeme(false);\n  };\n\n  let memeList = memes.map((meme) => {\n    return <Meme url={meme.url} id={meme.id} />;\n  });\n\n  return (\n    <div className=\"App\">\n      <button onClick={handleClick}>Create your own meme!</button>\n      {memeList}\n      {showMeme ? memeList : <Form />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}