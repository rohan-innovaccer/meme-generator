{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/training/react/react-day3-assignment/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    setShowMeme,\n    selectedImage\n  } = _ref;\n  const [topText, setTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n\n  const handleTopTextChange = e => {\n    setTopText(e.target.value);\n  };\n\n  const handleBottomTextChange = e => {\n    setBottomText(e.target.value);\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    const params = {\n      template_id: selectedImage,\n      text0: topText,\n      text1: bottomText,\n      username: \"preetgarg\",\n      password: \"REACTMEMEAPP@\"\n    };\n    fetch(\"https://api.imgflip.com/caption_image\".concat(params), {\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  };\n\n  const goBack = () => {\n    setShowMeme(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate your own meme!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondary-btn\",\n      onClick: goBack,\n      children: \"Go Back!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-btn\",\n      onClick: handleClick,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleTopTextChange,\n        value: topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleBottomTextChange,\n        value: bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"TsKUdrv0Tk6ckZeY48/OUM7RWFg=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/rohan/Desktop/training/react/react-day3-assignment/src/components/Form.js"],"names":["React","useState","Form","setShowMeme","selectedImage","topText","setTopText","bottomText","setBottomText","handleTopTextChange","e","target","value","handleBottomTextChange","handleClick","preventDefault","params","template_id","text0","text1","username","password","fetch","method","then","response","json","data","console","log","goBack"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAiC;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMQ,mBAAmB,GAAIC,CAAD,IAAO;AACjCJ,IAAAA,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,sBAAsB,GAAIH,CAAD,IAAO;AACpCF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,QAAME,WAAW,GAAIJ,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,MAAM,GAAG;AACLC,MAAAA,WAAW,EAAEb,aADR;AAELc,MAAAA,KAAK,EAAEb,OAFF;AAGLc,MAAAA,KAAK,EAAEZ,UAHF;AAILa,MAAAA,QAAQ,EAAE,WAJL;AAKLC,MAAAA,QAAQ,EAAE;AALL,KAAf;AAQAC,IAAAA,KAAK,gDAAyCN,MAAzC,GAAkD;AACrDO,MAAAA,MAAM,EAAC;AAD8C,KAAlD,CAAL,CAEKC,IAFL,CAEWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAFxB,EAGKF,IAHL,CAGWG,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACL,KALH;AAMD,GAhBD;;AAkBA,QAAMG,MAAM,GAAG,MAAM;AACnB3B,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE2B,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAEhB,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAO,QAAA,QAAQ,EAAEL,mBAAjB;AAAsC,QAAA,KAAK,EAAEJ;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAEQ,sBAAjB;AAAyC,QAAA,KAAK,EAAEN;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjDD;;GAAML,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Form.css\";\n\nconst Form = ({setShowMeme, selectedImage}) => {\n  const [topText, setTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n\n  const handleTopTextChange = (e) => {\n    setTopText(e.target.value);\n  };\n\n  const handleBottomTextChange = (e) => {\n    setBottomText(e.target.value);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    const params = {\n              template_id: selectedImage,\n              text0: topText,\n              text1: bottomText,\n              username: \"preetgarg\",\n              password: \"REACTMEMEAPP@\"\n            };\n\n    fetch(`https://api.imgflip.com/caption_image${params}`,{\n      method:\"POST\",\n      }).then((response) => response.json())\n        .then((data) => {\n            console.log(data);\n      })\n  };\n\n  const goBack = () => {\n    setShowMeme(true);\n  };\n\n  return (\n    <div>\n      <h2>Generate your own meme!</h2>\n      <button className=\"secondary-btn\" onClick={goBack}>\n        Go Back!\n      </button>\n      <button className=\"primary-btn\" onClick={handleClick}>\n        Generate\n      </button>\n      <div className=\"container\">\n        <input onChange={handleTopTextChange} value={topText}></input>\n        <input onChange={handleBottomTextChange} value={bottomText}></input>\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}