{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/training/react/react-day3-assignment/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport MemeList from \"./MemeList\";\nimport Form from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [memes, setMemes] = useState([]);\n  const [showMeme, setShowMeme] = useState(true);\n  const [selectedImage, setSelectedImage] = useState(0);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      setMemes(response.data.memes);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const showForm = () => {\n    setShowMeme(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showMeme && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate-btn\",\n      onClick: showForm,\n      children: \"Create your own meme!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this), showMeme ? /*#__PURE__*/_jsxDEV(MemeList, {\n      memeArray: memes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      setShowMeme: setShowMeme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kFtfF4ZnUQHtEgneGHchzSiLXrA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rohan/Desktop/training/react/react-day3-assignment/src/components/App.js"],"names":["useEffect","useState","MemeList","Form","App","memes","setMemes","showMeme","setShowMeme","selectedImage","setSelectedImage","fetch","then","response","json","data","catch","err","console","log","showForm"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,CAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBP,MAAAA,QAAQ,CAACO,QAAQ,CAACE,IAAT,CAAcV,KAAf,CAAR;AACD,KAJH,EAKGW,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMG,QAAQ,GAAG,MAAM;AACrBZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGD,QAAQ,iBAAI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEa,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,EAEGb,QAAQ,gBAAG,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAmC,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAF9C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxBuBJ,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport MemeList from \"./MemeList\";\nimport Form from \"./Form\";\n\nexport default function App() {\n  const [memes, setMemes] = useState([]);\n  const [showMeme, setShowMeme] = useState(true);\n  const [selectedImage, setSelectedImage] = useState(0);\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((response) => {\n        setMemes(response.data.memes);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const showForm = () => {\n    setShowMeme(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {showMeme && <button className=\"generate-btn\" onClick={showForm}>Create your own meme!</button>}\n      {showMeme ? <MemeList memeArray={memes}/> : <Form setShowMeme={setShowMeme}/>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}